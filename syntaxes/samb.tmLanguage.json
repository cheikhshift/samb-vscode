{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SAMB",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.samb",
				"match": "\\b(if|while|for|return)\\b"
			},{
			"match": "\\b(server|require|import|include|package|author|routes|templates)\\b",
      		"name": "support.class.samb"
			},
			{
				"match" : "\\b(bool|byte|complex(64|128)|error|float(32|64)|rune|string|u?int(8|16|32|64)?|uintptr)\\b",
				"name" : "storage.type.samb"
			},
			{
				"match" : "\\b(GET|POST|PUT|DELETE|PATCH|global|go|server|provider|package|routes|templates|start|shutdown|recover|init|route|template)\\b",
				"name" : "entity.name.class.samb"
			},
			{
				"match" : "\\b(\\w+)\\b(?=\\()",
				"name" : "support.function.samb"
			},
			{
				"match" : "\\b(do|host|port|host|port|name|method|path|handler|provide|type|return|author)\\b",
				"name" : "variable.language.samb"
			},
			{
				"match" : "\\b(-)?[0-9.]+\\b",
				"name" : "constant.numeric.samb"
			},
			{
				"match" : "\\b(nil|false|true)\\b",
				"name" : "constant.language.samb"
			}]
		},
		"strings": {
			"name": "string.quoted.double.samb",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.samb",
					"match": "\\\\."
				}
			]
		},
		"strings": {
			"name": "comment.line",
			"begin": "#",
			"end": "\n"
		}
	},
	"scopeName": "source.se"
}